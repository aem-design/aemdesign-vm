#version=CENTOS

# Install OS instead of upgrade
install
# Use CDROM installation media
cdrom
# net install
#repo --name=base --baseurl="http://centos.fastbull.org/centos/7/os/x86_64/"
#url --url="http://mirror.zetup.net/CentOS/7/os/x86_64/"
#repo --name=epel --baseurl=http://download.fedoraproject.org/pub/epel/7/x86_64/
#repo --name=updates --baseurl=http://centos.fastbull.org/centos/7/updates/x86_64/

# Reboot after installation
reboot
# Use text mode install
text
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
keyboard us
timezone --isUtc --nontp Australia/Melbourne
#timezone --isUtc --nontp UTC
selinux --enforcing
# Do not configure the X Window System
skipx

# System authorization information
auth --enableshadow --passalgo=sha512

# disable root
rootpw --lock --iscrypted locked

# create sudo user.
user --name=aemdesign --uid=7331 --gid=7331 --groups=wheel --password=3sGzFUl5Kyy6s --iscrypted

# Update firewall
#firewall --enabled --ssh
firewall --disabled

# create dhcp network interface for initial build
network --bootproto=dhcp --hostname=aemdesign --onboot=yes --activate  --device=enp0s3 --ipv6=auto

# disable cloud-init, enable ntp, docker and ssh
services --disabled="cloud-init,cloud-config,cloud-final,cloud-init-local" --enabled="cloud-utils-growpart,systemd-timesyncd,network,iptables-services,sshd,docker-latest,postfix,network,ntpd,ntpdate"

# System bootloader configuration. ipv6.disable=1 is needed for yum repos to install
bootloader --location=mbr --boot-drive=sda  --append="rhgb quiet vga=791"

ignoredisk --only-use=sda
#autopart --type=lvm
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all  --drives=sda

## Disk partitioning information
part /boot --fstype="xfs" --size=512
part pv.01 --size=1 --grow --ondisk=sda
# create a new logical volume and group for everything lese
volgroup dockervg --pesize=4096 pv.01 --reserved-percent=20
# add a 20GB XFS partition for root
logvol /        --fstype="xfs" --size=10000   --vgname=dockervg --name=lv_root
logvol /usr     --fstype="xfs"  --size=3072    --vgname=dockervg --name=lv_usr
logvol /tmp     --fstype="xfs"  --size=1024    --vgname=dockervg --name=lv_tmp
logvol /var     --fstype="xfs"  --size=5120    --vgname=dockervg --name=lv_var
logvol /home    --fstype="xfs"  --size=512     --vgname=dockervg --name=lv_home
# add a 2GB swap partition
logvol swap     --fstype="xfs"  --size=1024    --vgname=dockervg --name=lv_swap

%packages --excludedocs --instLangs=en
@base
@core
@network-file-system-client


#extras
lvm2
grep
sed
git
#curl #this installs NSS open ssl
#curl-openssl #NEED to install curl with openssl
git
#rsync
#which
wget
tar
bzip2
dhcp
sysstat
vlock
#epel-release
openssh-clients
openssh-server
openssl-devel
iptables-services
net-tools
#python-six
#systemd-python
#traceroute
#unzip
#system-config-firewall-base

#for installing vmware tools
#kernel-devel
#kernel-headers
#gcc
#make
#perl
#libconfig

#docker
device-mapper
device-mapper-event
device-mapper-libs
device-mapper-event-libs
device-mapper-persistent-data
#container-storage-setup

#python
#python-setuptools
#libcurl-devel
#python-devel
#python-pip

#for monitoring
#net-snmp
#open-vm-tools

#hardening
ca-certificates

#time sync
ntp
ntpdate

yum-utils


%end

# show IP of vm after boot
%post --erroronfail
#--log=/anaconda-post.log

#add ip info display
echo '#!/bin/sh' > /etc/rc.d/rc.local
echo $'IP0=$(/sbin/ip addr show | grep global | grep brd | grep \'inet \' | cut -d: -f2 | awk \'{ print $2}\')' >> /etc/rc.d/rc.local
echo 'echo "IP: $IP0" > /etc/issue' >> /etc/rc.d/rc.local
echo 'exit 0' >> /etc/rc.d/rc.local
chmod a+x /etc/rc.d/rc.local

# allow aemdesign user to sudo
sed -i '$ a\%aemdesign ALL=(ALL) NOPASSWD:ALL' /etc/sudoers
#sed -i '$ a\%sudo ALL=(ALL) NOPASSWD:ALL' /etc/sudoers
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

# remove stuff we don't need that anaconda insists on
# kernel needs to be removed by rpm, because of grubby
#rpm -e kernel

#yum -y remove bind-libs bind-libs-lite dhclient dhcp-common dhcp-libs \
#  dracut-network e2fsprogs e2fsprogs-libs ebtables ethtool file \
#  firewalld freetype gettext gettext-libs groff-base grub2 grub2-tools \
#  grubby initscripts iproute iptables kexec-tools libcroco libgomp \
#  libmnl libnetfilter_conntrack libnfnetlink libselinux-python lzo \
#  libunistring os-prober python-decorator python-slip python-slip-dbus \
#  snappy sysvinit-tools which linux-firmware GeoIP firewalld-filesystem

#yum clean all

#Generate installtime file record
/bin/date +%Y%m%d_%H%M > /etc/BUILDTIME
%end
#
#%post
#echo "STORAGE_DRIVER=overlay2
#DEVS=/dev/sdb
#CONTAINER_ROOT_LV_NAME=dockerlv
#CONTAINER_ROOT_LV_SIZE=100%FREE
#CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
#VG=dockervg" >> /etc/sysconfig/docker-storage-setup
#%end